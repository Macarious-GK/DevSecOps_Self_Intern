version: '3.9'

services:
  proxy:
    image: nginx:latest
    container_name: nginx_proxy
    depends_on:
      - app
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - Frontend

  app:
    image: macarious25siv/project:NodeV0
    container_name: node_app
    depends_on:
      - mongodb
    networks:
      - Frontend
      - Backend

  # app_v1:
  #   image: macarious25siv/project:NodeV1
  #   container_name: node_app_v1
  #   depends_on:
  #     - mongodb
  #   networks:
  #     - Frontend
  #     - Backend

  mongodb:
    image: mongo:4
    container_name: mongodb
    volumes:
      - mongodb_data:/data/db
    networks:
      - Backend

  mongodb_exporter:
    image: bitnami/mongodb-exporter:latest
    container_name: mongodb_exporter
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/admin
    ports:
      - "9216:9216"
    command:
      - '--collect-all'
    depends_on:
      - mongodb
    networks:
      - Backend
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ../monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - mongodb_exporter
      - app
    networks:
      - Backend
      - Monitor
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ../monitoring/grafana/dashboards:/var/lib/grafana/dashboards/          # Dashboards folder
      - ../monitoring/grafana/provisioning:/etc/grafana/provisioning            # Provisioning configuration (including dashboards.yaml)

    depends_on:
      - prometheus
    networks:
      - Monitor


volumes:
  mongodb_data:
    name: mongodb_data

networks:
  Frontend:
    name: Frontend
    driver: bridge
  
  Backend:
    name: Backend
    driver: bridge

  Monitor:
    name: Monitor
    driver: bridge