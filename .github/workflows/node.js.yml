# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.11.0]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './app/src/package-lock.json'
    - run: npm ci
      working-directory: ./app/src
    - run: npm run build --if-present
      working-directory: ./app/src
    - run: npm test
      working-directory: ./app/src
    - run: docker build -t macarious25siv/project:NodeV5 .
      working-directory: ./app/
    - run:  snyk container test ${config.imageName} --file=Dockerfile --all-projects --json-file-output=snyk-report.json
      working-directory: ./app/
    - run: docker login -u ${{ secrets.Docker_USERNAME }} -p ${{ secrets.Docker_PASSWORD }}
      working-directory: ./app/
    - run: docker push macarious25siv/project:NodeV5

  # publish:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - run: pwd
  #     - uses: mr-smithers-excellent/docker-build-push@v6
  #       name: Build & push Docker image
  #       with:
  #         image: macarious25siv/project
  #         tags: NodeV5
  #         registry: docker.io
  #         directory: .
  #         dockerfile: ./app/dockerfile
  #         username: ${{ secrets.Docker_USERNAME }}
  #         password: ${{ secrets.Docker_PASSWORD }}

        