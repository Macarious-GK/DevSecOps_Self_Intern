name: Node.js CI

on:
  push:
    branches: [ "main" ]
    paths:
      - 'app/**'
      - '.github/workflows/node.js.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'app/**'

env:
  IMAGE_NAME: macarious25siv/project:NodeV5
  IMAGE_ARCHIVE: docker-image.tar

jobs:
  Code_build_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.11.0]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './app/src/package-lock.json'

    - run: npm ci
      working-directory: ./app/src
    - run: npm run build --if-present
      working-directory: ./app/src

    - name: Run Snyk to check Node.js dependencies
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high ./app/src

    - run: npm test
      working-directory: ./app/src

  docker-build:
    runs-on: ubuntu-latest
    needs: Code_build_test
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: docker build -t $IMAGE_NAME .
      working-directory: ./app/

    - name: Save Docker image as artifact
      run: |
        docker save $IMAGE_NAME -o $IMAGE_ARCHIVE
    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: docker-image.tar

  Security-gate-Snyk-for-Docker-images:
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
    - name: Download Docker image artifact
      uses: actions/download-artifact@v4
      with:
        name: docker-image

    - name: Load Docker image
      run: docker load -i docker-image.tar

    - name: Run Snyk to check Docker images for vulnerabilities
      continue-on-error: true  # Un-comment this for production
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        image:  ${{ env.IMAGE_NAME }}
        args: --severity-threshold=high

  docker-push:
    runs-on: ubuntu-latest
    needs: [Security-gate-Snyk-for-Docker-images, docker-build]
    steps:
    - name: Download Docker image artifact
      uses: actions/download-artifact@v4
      with:
        name: docker-image

    - name: Load Docker image
      run: docker load -i docker-image.tar

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push Docker image
      run: docker push ${{ env.IMAGE_NAME }}
