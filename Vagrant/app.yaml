apiVersion: v1
kind: Namespace
metadata:
  name: mac
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ndeployapp
  namespace: mac
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nodejs
  template:
    metadata:
      labels:
        app: nodejs
    spec:
      containers:
        - name: nodejs
          image: macarious25siv/project:NodeV5
          ports:
            - containerPort: 5000
          env:
            - name: MONGODB_URI
              value: "mongodb://nservicedb.mac.svc.cluster.local:27017/test"
---
apiVersion: v1
kind: Service
metadata:
  name: nserviceapp
  namespace: mac
spec:
  selector:
    app: nodejs
  type: NodePort
  ports:
    - port: 5000
      targetPort: 5000
      protocol: TCP
      nodePort: 30225

#-----------------------------------DB-----------------------------------
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mypvc
  namespace: mac
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard
  # volumeMode: Filesystem
  # selector:
  #   matchLabels:
  #     type: mongodb
  
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ndeploydb
  namespace: mac
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: db
  template:
    metadata:
      labels:
        tier: db
    spec:
      containers:
        - name: mongodb
          image: mongo:4
          ports:
            - containerPort: 27017
          volumeMounts:
            - mountPath: /data/db
              name: db-volume
      volumes:
        - name: db-volume
          persistentVolumeClaim:
            claimName: mypvc
---
apiVersion: v1
kind: Service
metadata:
  name: nservicedb
  namespace: mac
spec:
  selector:
    tier: db
  type: ClusterIP
  ports:
    - port: 27017
      targetPort: 27017
      protocol: TCP
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: prometheus
  namespace: mac
  labels:
    name: prometheus
spec:
  selector:
    matchLabels:
      name: prometheus
  template:
    metadata:
      labels:
        name: prometheus
    spec:
      # serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        args:
            - "--config.file=/etc/prometheus/prometheus.yml"
        volumeMounts:
        - name: config-volume-prometheus
          mountPath: /etc/prometheus/
      volumes:
      - name: config-volume-prometheus
        configMap:
          name: prometheus-config
--- 
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: mac
  labels:
    name: prometheus
spec:
  type: NodePort
  selector:
    name: prometheus
  ports:
    - name: prometheus
      port: 9090
      targetPort: 9090
      nodePort: 30090
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: mac
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    scrape_configs:
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - source_labels: [__meta_kubernetes_node_name]
            action: keep
            regex: .*
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_name]
            action: keep
            regex: .*
      - job_name: "prometheus"
        static_configs:
          - targets: ["localhost:9090"]
            labels:
              app: "prometheus"

      - job_name: "node_app"
        static_configs:
          - targets: ["nserviceapp.mac.svc.cluster.local:5000"]
            labels:
              app: "node_app"
